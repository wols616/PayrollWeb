@model List<EvaluacionDesempenoViewModel>

<style>
    body {
        background-color: #f2f9ff;
    }

    .card-header {
        background-color: #007bff;
        color: white;
    }

        .card-header.bg-warning {
            background-color: #007bff  !important;
            color: #212529;
        }

    .btn-outline-primary {
        color: #007bff;
        border-color: #007bff;
    }

        .btn-outline-primary:hover {
            background-color: #007bff;
            color: white;
        }

    .text-warning {
        color: #ffc107 !important;
    }

    .chart-container {
        background-color: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
</style>

<div style="background-color: #f2f9ff; min-height: 100vh; padding: 20px;">
    <div class="container" style="background-color: white; border-radius: 10px; padding: 25px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
        <div style="border-bottom: 1px solid #e9ecef; padding-bottom: 15px; margin-bottom: 20px;">
            <h2 style="color: #007bff;">Evaluaciones de @ViewBag.Empleado.Nombre</h2>
        </div>

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-delete-later">
                <i class="bi bi-exclamation-triangle"></i> @TempData["Error"]
            </div>
        }

        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-delete-later">
                <i class="bi bi-check-circle"></i> @TempData["Success"]
            </div>
        }

        <button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#agregarEvaluacionModal" style="background-color: #007bff; border-color: #007bff;">
            <i class="bi bi-plus-circle"></i> Agregar Evaluación
        </button>

        <!-- Filtro por fecha única -->
        <div class="card mb-4">
            <div class="card-header">
                <h5><i class="bi bi-funnel"></i> Filtrar Evaluaciones por Fecha</h5>
                @if (!Context.Request.Query.ContainsKey("fechaInicio"))
                {
                    <span class="badge bg-info">Mostrando promedio de todas las evaluaciones</span>
                }
            </div>
            <div class="card-body">
                <form id="filtroForm" method="get" asp-action="VerEvaluacionDesempeno" asp-route-id="@ViewBag.Empleado.IdEmpleado">
                    <div class="row align-items-end">
                        <div class="col-md-8">
                            <label for="fechaEvaluacion" class="form-label">Seleccione una fecha</label>
                            <input type="date" class="form-control" id="fechaEvaluacion" name="fechaInicio"
                                   value="@Context.Request.Query["fechaInicio"]">
                        </div>


                        <div class="col-md-4">
                            <button type="submit" class="btn btn-primary me-2" style="background-color: #007bff; border-color: #007bff;">
                                <i class="bi bi-filter"></i> Filtrar
                            </button>
                            <a href="@Url.Action("VerEvaluacionDesempeno", new { id = ViewBag.Empleado.IdEmpleado })"
                               class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-counterclockwise"></i> Mostrar todas
                            </a>
                        </div>


                    </div>
                    <input type="hidden" name="fechaFin" value="@Context.Request.Query["fechaInicio"]">
                </form>
            </div>
        </div>

        <!-- Tabla de Evaluaciones de Desempeño existentes -->
        @if (Model.Any())
        {
            var fechasUnicas = Model
            .Select(e => e.fecha.Date)
            .Distinct()
            .OrderByDescending(f => f)
            .ToList();

            foreach (var fecha in fechasUnicas)
            {
                <div class="card border-warning mb-2">
                    <div class="card-header bg-warning text-light">
                        <h5 class="mb-0"><i class="bi bi-calendar-date"></i> Evaluaciones del día @fecha.ToString("yyyy-MM-dd")</h5>
                    </div>
                </div>

                <table class="table table-bordered table-hover mb-4">
                    <thead class="thead-light">
                        <tr>
                            <th style="width: 20%">Fecha</th>
                            <th style="width: 40%">KPI Evaluado</th>
                            <th style="width: 20%">Puntuación</th>
                            <th style="width: 20%">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var evaluacion in Model.Where(e => e.fecha.Date == fecha))
                        {
                            <tr>
                                <td>@evaluacion.fecha.ToString("dd/MM/yyyy")</td>
                                <td>@evaluacion.KPI.Nombre</td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        @evaluacion.puntuacion
                                        <div class="ms-2">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <span class="@(i <= evaluacion.puntuacion ? "text-primary" : "text-secondary")">★</span>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <button class="btn btn-outline-primary btn-sm"
                                            onclick="editarEvaluacion(@evaluacion.IdEvaluacionDesempeno, '@evaluacion.fecha.ToString("yyyy-MM-dd")', @evaluacion.id_kpi, @evaluacion.puntuacion)">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }
        else
        {
            <div class="alert alert-info">
                <i class="bi bi-info-circle"></i> No hay evaluaciones registradas.
            </div>
        }

        <!-- Gráfica comparativa -->
        <div class="card mb-4">
            <div class="card-header">
                <h5><i class="bi bi-bar-chart"></i> Comparación de Desempeño</h5>
            </div>
            <div class="card-body">
                <div class="chart-container">
                    <canvas id="desempenoChart" height="300"></canvas>
                </div>
            </div>
            <div class="card-footer text-muted">
                <small>
                    <span style="color: rgb(54, 162, 235)">●</span>
                    @(Context.Request.Query.ContainsKey("fechaInicio") ? "Puntuación actual" : "Puntuación promedio") |
                    <span style="color: rgb(75, 192, 192)">●</span> Puntuación ideal (5 en todos los KPIs)
                </small>
            </div>
        </div>

        <!-- Modal para agregar evaluación -->
        <div class="modal fade" id="agregarEvaluacionModal" tabindex="-1" aria-labelledby="agregarEvaluacionModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #007bff; color: white;">
                        <h5 class="modal-title" id="agregarEvaluacionModalLabel">Agregar Nueva Evaluación</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar" style="color: white;"></button>
                    </div>
                    <div class="modal-body">
                        <form id="evaluacionForm" method="post" action="/Evaluacion/CrearEvaluaciones">
                            <input type="hidden" id="idEmpleado" name="IdEmpleado" value="@ViewBag.Empleado.IdEmpleado">
                            <div class="mb-3">
                                <label for="fecha" class="form-label">Fecha de Evaluación</label>
                                <input type="date" class="form-control" id="fecha" name="Fecha" required
                                       onchange="validarFechaUnica(this.value)">
                                <div id="fechaError" class="invalid-feedback" style="display:none;">
                                    Ya existe una evaluación para esta fecha. Por favor seleccione otra.
                                </div>
                            </div>

                            <div class="card mb-4">
                                <div class="card-header" style="background-color: #007bff; color: white;">
                                    <h5>Evaluación de Competencias y Habilidades</h5>
                                    <p class="text-white">Califique cada aspecto del desempeño del empleado según la siguiente escala:</p>
                                    <ul class="text-white">
                                        <li><strong>1 - Insatisfactorio</strong>: No cumple con las expectativas básicas</li>
                                        <li><strong>2 - En desarrollo</strong>: Cumple parcialmente, necesita mejorar</li>
                                        <li><strong>3 - Satisfactorio</strong>: Cumple con lo esperado</li>
                                        <li><strong>4 - Bueno</strong>: Supera las expectativas</li>
                                        <li><strong>5 - Excelente</strong>: Desempeño excepcional</li>
                                    </ul>
                                </div>
                                <div class="card-body">
                                    @foreach (var kpi in ViewBag.KPIs)
                                    {
                                        <div class="mb-4">
                                            <h6>@kpi.Nombre</h6>
                                            <div class="btn-group" role="group" aria-label="Puntuación para @kpi.Nombre">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <input type="radio" class="btn-check" name="Puntuaciones[@kpi.IdKpi]" id="kpi-@kpi.IdKpi-@i" value="@i" autocomplete="off" required>
                                                    <label class="btn btn-outline-primary" for="kpi-@kpi.IdKpi-@i">@i</label>
                                                }
                                            </div>
                                        </div>
                                        <hr>
                                    }
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                    <i class="bi bi-x-circle"></i> Cancelar
                                </button>
                                <button type="submit" class="btn btn-primary" id="submitButton" disabled style="background-color: #007bff; border-color: #007bff;">
                                    <i class="bi bi-save"></i> Guardar Evaluaciones
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal para editar evaluación -->
        <div class="modal fade" id="evaluacionModal" tabindex="-1" aria-labelledby="evaluacionModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #007bff; color: white;">
                        <h5 class="modal-title" id="evaluacionModalLabel">Editar Evaluación</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar" style="color: white;"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editarEvaluacionForm" method="post">
                            <input type="hidden" id="evaluacionId" name="IdEvaluacionDesempeno">
                            <input type="hidden" name="IdEmpleado" value="@ViewBag.Empleado.IdEmpleado">
                            <input type="hidden" id="editFecha" name="Fecha">
                            <div class="mb-3">
                                <label class="form-label">Fecha</label>
                                <input type="text" class="form-control-plaintext" id="fechaMostrada" readonly>
                            </div>
                            <div class="mb-3">
                                <label for="editIdKpi" class="form-label">KPI Evaluado</label>
                                <select class="form-control" id="editIdKpi" name="IdKpi" required>
                                    @foreach (var kpi in ViewBag.KPIs)
                                    {
                                        <option value="@kpi.IdKpi">@kpi.Nombre</option>
                                    }
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Puntuación</label>
                                <div class="btn-group" role="group">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <input type="radio" class="btn-check" name="Puntuacion" id="editPuntuacion-@i" value="@i" autocomplete="off">
                                        <label class="btn btn-outline-primary" for="editPuntuacion-@i">@i</label>
                                    }
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                    <i class="bi bi-x-circle"></i> Cancelar
                                </button>
                                <button type="submit" class="btn btn-primary" style="background-color: #007bff; border-color: #007bff;">
                                    <i class="bi bi-save"></i> Actualizar
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css">

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Datos para la gráfica
        const kpiNames = [
        @foreach (var kpi in ViewBag.KPIs)
        {
            @Html.Raw($"'{kpi.Nombre}',")
        }
        ];

        const puntuaciones = [
        @foreach (var dato in ViewBag.DatosGrafica)
        {
            @Html.Raw($"{dato},")
        }
        ];

        const tieneFiltroFecha = @(Context.Request.Query.ContainsKey("fechaInicio") ? "true" : "false");
        const tituloGrafica = tieneFiltroFecha ? 'Comparación de Desempeño (Fecha específica)' : 'Comparación de Desempeño (Promedio general)';
        const etiquetaDataset = tieneFiltroFecha ? 'Puntuación Actual' : 'Puntuación Promedio';

        // Configuración de la gráfica
        const ctx = document.getElementById('desempenoChart').getContext('2d');
        const desempenoChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: kpiNames,
                datasets: [
                    {
                        label: etiquetaDataset,
                        data: puntuaciones,
                        borderColor: 'rgb(54, 162, 235)',
                        backgroundColor: 'rgba(54, 162, 235, 0.5)',
                        tension: 0.1,
                        fill: false,
                        borderWidth: 2
                    },
                    {
                        label: 'Puntuación Ideal',
                        data: Array(kpiNames.length).fill(5),
                        borderColor: 'rgb(75, 192, 192)',
                        backgroundColor: 'rgba(75, 192, 192, 0.5)',
                        tension: 0,
                        fill: false,
                        borderWidth: 2,
                        borderDash: [5, 5]
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: tituloGrafica,
                        font: {
                            size: 16,
                            weight: 'bold'
                        }
                    },
                    tooltip: {
                        backgroundColor: 'rgba(0, 123, 255, 0.9)',
                        titleColor: '#fff',
                        bodyColor: '#fff',
                        borderColor: '#007bff',
                        borderWidth: 1,
                        padding: 12,
                        callbacks: {
                            label: function(context) {
                                let label = context.dataset.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                if (context.parsed.y !== null) {
                                    // Mostrar con 1 decimal si es promedio
                                    const value = tieneFiltroFecha ? context.parsed.y : context.parsed.y.toFixed(1);
                                    label += value;
                                }
                                return label;
                            }
                        }
                    },
                    legend: {
                        labels: {
                            font: {
                                size: 12
                            },
                            usePointStyle: true,
                            pointStyle: 'circle'
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 5,
                        ticks: {
                            stepSize: 1
                        },
                        title: {
                            display: true,
                            text: 'Puntuación',
                            font: {
                                weight: 'bold'
                            }
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'KPIs',
                            font: {
                                weight: 'bold'
                            }
                        }
                    }
                }
            }
        });

        // Función para validar fecha única
        function validarFechaUnica(fechaSeleccionada) {
            const fechaInput = document.getElementById('fecha');
            const fechaError = document.getElementById('fechaError');
            const submitButton = document.getElementById('submitButton');

            // Obtener todas las fechas existentes del empleado
            const fechasExistentes = [
        @{
            var todasEvaluaciones = ViewBag.Evaluaciones;
            foreach (var eval in todasEvaluaciones)
            {
                @Html.Raw($"'{eval.fecha.ToString("yyyy-MM-dd")}',")
            }
        }
            ].filter(Boolean);

            // Verificar si la fecha ya existe en cualquier evaluación
            if (fechasExistentes.includes(fechaSeleccionada)) {
                fechaInput.classList.add('is-invalid');
                fechaError.style.display = 'block';
                fechaError.textContent = 'Ya existe una evaluación para esta fecha. No se pueden agregar evaluaciones a fechas ya evaluadas.';
                submitButton.disabled = true;
            } else {
                fechaInput.classList.remove('is-invalid');
                fechaError.style.display = 'none';
                submitButton.disabled = false;
            }
        }

        // Función para editar evaluación
        function editarEvaluacion(idEvaluacion, fecha, idKpi, puntuacion) {
            document.getElementById('evaluacionId').value = idEvaluacion;
            document.getElementById('editFecha').value = fecha;
            document.getElementById('fechaMostrada').value = fecha;
            document.getElementById('editIdKpi').value = idKpi;

            // Seleccionar el radio button correspondiente a la puntuación
            document.querySelector(`input[name="Puntuacion"][value="${puntuacion}"]`).checked = true;

            // Configurar el formulario para enviar a la acción de actualización
            document.getElementById('editarEvaluacionForm').action = '/Evaluacion/ActualizarEvaluacion';

            // Mostrar el modal
            var modal = new bootstrap.Modal(document.getElementById('evaluacionModal'));
            modal.show();
        }

        // Habilitar el botón de submit cuando se seleccione al menos un radio button
        document.querySelectorAll('input[type="radio"][name^="Puntuaciones"]').forEach(radio => {
            radio.addEventListener('change', function() {
                const submitButton = document.getElementById('submitButton');
                const checkedRadios = document.querySelectorAll('input[type="radio"][name^="Puntuaciones"]:checked');
                submitButton.disabled = checkedRadios.length === 0;
            });
        });
    </script>
}